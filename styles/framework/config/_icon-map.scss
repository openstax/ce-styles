@function default-icon-map() {
  $DEFAULT_ICON_MAP: (
    blank: "",
    eoc-default-icon: resource(theme, assessments-icon, svg),
    eoc-key-terms-icon: resource(theme, key-terms-icon, svg),
    eoc-summary-icon: resource(theme, summary-icon, svg),
    note-default-icon: resource(theme, link-learning-icon, svg),
  );
  @return $DEFAULT_ICON_MAP;
}

@function icon_map($name) {
  @if map-has-key($icon_map, $name) {
    @return map-get($icon_map, $name);
  }
  @error "Unknown icon designation: #{$name}";
}

// Merge map into icon map, but don't allow deletion of default keys
// @mixin icon-map-merge($map) {
//   $icon-map: map-merge(default-icon-map(), map-merge($icon-map, $map)) !global;
// }

$icon-manifest: ();
@mixin icon-map-merge($function) {
  $icon-manifest: append($icon-manifest, $function) !global;
  @include update-icon-config();
}

$icon-map: default-icon-map() !default;
$icon-map: map-merge(default-icon-map(), $icon-map);

@mixin update-icon-config() {
  $icon-map: default-icon-map() !global;
  @each $map-get-function in $icon-manifest{
    $icon-map: map-merge($icon-map, call($map-get-function)) !global;
  }
}
