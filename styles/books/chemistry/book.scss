@import 'framework/framework';
@import '../../templates/template1/design.scss';
@import '../../templates/template1/settings.scss';

@include add_settings((
  Preface: (
    _selectors: (".preface"),
    'BodyH3:::color': (_ref: "colorMap:::chemistryHeaderColor"),
    'BodyH4:::color': (_ref: "colorMap:::chemistryHeaderColor"),
    'BodyH5:::color': (_ref: "colorMap:::chemistryHeaderColor"),
  ),
));

@include add_settings((
  Chapter: (
    _selectors: ('[data-type="chapter"]'),
    'TitleNumber:::color': (_ref: "colorMap:::chemistryHeaderColor"),
  ),
));

@include add_settings((
  Module: (
    _selectors: ('[data-type="chapter"] > [data-type="page"]:not(.introduction)'),
    'Title:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    'Subtitle:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    'SubSubtitle:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
  ),
));
@include add_settings((
  KeyTerm:(
      _selectors: ("[data-type = 'chapter'] > .os-glossary-container"),
      'EocHeader:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    ),
  KeyEquation:(
      _selectors: (".os-eoc.os-key-equations-container"),
      'EocHeader:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    ),
  Summary:(
      _selectors: ("[data-type = 'chapter'] > .os-summary-container"),
      'EocHeader:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    ),
  Exercises:(
      _selectors: ("[data-type = 'chapter'] > .os-exercises-container"),
      'CompositeHeader:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
      'CompositeHeader:::font-family': (_ref: 'typography:::sansFont'),
      'CompoundCompositeHeader:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
      'CompoundCompositeHeader:::font-family': (_ref: 'typography:::sansFont'),
      'SectionLink:::font-family': (_ref:'typography:::titleFont'),
    ),
));

@include add_settings((
  LearningObjectiveAbstract: (
    _selectors: ('[data-type="page"] > [data-type="abstract"]'),
    'AbstractTitle:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    'ListDot:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    ),
));
@include add_settings((
    Appendix: (
    _selectors: (".appendix"),
    'MainText:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    ),
));
@include add_settings((
  FullWidthChapterIntro: (
    _selectors: (".introduction"),
    'SplashFigureBg:::background-color': (_ref: "colorMap:::chemistryIntroColor"),
    'OutlineTitle:::color': (_ref: "colorMap:::chemistryIntroColor"),
    'Outline:::border-bottom-color': (_ref: "colorMap:::chemistryIntroColor"),
    'OutlineTitleBottomBorder:::border-bottom-color': (_ref: "colorMap:::chemistryIntroColor"),
  ),
));
@include add_settings((
    TOC: (
    _selectors: ('nav#toc'),
    'TocTitleWord:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    'TocTitleWord:::border-bottom-color': (_ref: 'colorMap:::chemistryHeaderColor'),
    'TocChapterNumber:::color': (_ref: 'colorMap:::chemistryHeaderColor'),
    ),
));
@include add_settings((
  FakeTitleTable: (
    _selectors: ('.os-table'),
    'TableTitle:::color': (_ref: "colorMap:::chemistryTableColor"),
    'LastTableRowData:::border-bottom-color': (_ref: "colorMap:::chemistryTableColor"),
  ),
));
//notes settings
@include add_settings((
  EverydayLifeNote:(
    _selectors:(".everyday-life"),
    group-border-color: (_ref: 'colorMap:::everydayLifeColor'),
    'Title:::font-family': (_ref: 'typography:::titleFont'),
    'Title:::color': (_ref: 'colorMap:::everydayLifeColor'),
  ),
  PortraitNote:(
    _selectors: (".chemist-portrait"),
    group-border-color: (_ref: 'colorMap:::portraitColor'),
    'Title:::font-family': (_ref: 'typography:::titleFont'),
    'Title:::color': (_ref: 'colorMap:::portraitColor'),
  ),
  InterconnectNote:(
    _selectors: (".sciences-interconnect"),
    group-border-color: (_ref: 'colorMap:::interconnectedColor'),
    'Title:::font-family': (_ref: 'typography:::titleFont'),
    'Title:::color': (_ref: 'colorMap:::interconnectedColor'),
    'TitleIcon:::background': url(toDataUri("svg+xml", "designs/carnival/resources/carnival-interconnect.svg")) no-repeat top left,
  ),
  Example:(
    _selectors: ("[data-type='example']"),
    group-border-color: (_ref: 'colorMap:::exampleColor'),
    'Title:::font-family': (_ref: 'typography:::titleFont'),
    'Title:::color': (_ref: 'colorMap:::exampleColor'),
    'TitleIcon:::background': url(toDataUri("svg+xml", "designs/carnival/resources/carnival-example.svg")) no-repeat top left,
  ),
  LinkToLearningNote:(
    _selectors: (".link-to-learning"),
    'Body:::border-bottom-color': (_ref: 'colorMap:::linkToLearningColor'),
    'Title:::font-family': (_ref: 'typography:::titleFont'),
    'Icon:::background': url(toDataUri("svg+xml", "designs/carnival/resources/carnival-linktolearning.svg")) no-repeat top left,
    'TitleText:::max-width': h-grid(10),
  ),
));

@include use('BookRoot', "common:::BookRoot");
@include use('Link', "carnival:::Link");
@include use('FigureContainer','carnival:::Figure');

//book specific styles
@include use('Preface','carnival:::Preface');
@include use('KeyTerm','carnival:::EocKeyTerm');
@include use('KeyEquation','carnival:::EocKeyEqu');
@include use('Summary','carnival:::EocSummary');
@include use('Exercises','carnival:::EocOneColumnClustered');
@include use('RegularExercise','carnival:::ExerciseShape');
@include use('LearningObjectiveAbstract', 'carnival:::LearningObjectiveAbstractShape');
@include use('Appendix', 'carnival:::AppendixShape');
@include use('Index', 'carnival:::IndexShape');
@include use('AnswerKey', 'carnival:::AnswerKeyShape');
@include use('FullWidthChapterIntro', 'carnival:::FullWidthChapterIntroShape');
@include use('Chapter', 'carnival:::Chapter');
@include use('TOC', 'carnival:::NoUnitToc');
@include use('Module', 'carnival:::ModuleShape');
@include use('Footnotes', 'carnival:::FootnotesShape');
@include use('FootnoteCall', 'carnival:::FootnotesCallShape');
@include use('Term', 'carnival:::Term');
@include use('BasicTable', 'carnival:::BasicTableShape');
@include use('FakeTitleTable', 'carnival:::FakeTitleTableShape');
@include use('EverydayLifeNote', 'carnival:::BoxedNoteShape');
@include use('PortraitNote', 'carnival:::BoxedNoteShape');
@include use('InterconnectNote', 'carnival:::IconNoteShape');
@include use('Example', 'carnival:::IconNoteShape');
@include use('LinkToLearningNote', 'carnival:::IconCondensedShape');
@include use('Equation', 'carnival:::EquationShape');

// We need to relocate this, but don't have to infrastructure or time right now
[data-type="chapter"] {
  page: chapter;
  prince-page-group: start;
  page-break-before: right;
}

.os-eoc.os-glossary-container {
  page: eoc;
  prince-page-group: start;
}

.appendix {
  page: appendix;
  prince-page-group: start;
}

.os-eob[data-type="composite-chapter"] {
  page: eob;
  prince-page-group: start;
}
.os-eoc {
  page: eoc;
}

.appendix {
  page: appendix;
}

.os-eob {
  page: eob;
}

$bandColor: settings('scheme:::B4');
$bandBorder: half-fullBleedsSize(.5, in) solid $bandColor;

@mixin band($side) {
  content: " ";
  border-#{$side}: $bandBorder;
  @if $side == "right" {
    padding: fullBleedsPadding(0, rem) fullBleedsPadding(0, rem) fullBleedsPadding(0, rem) 0;
    margin: fullBleedsMargin(0, rem) fullBleedsMargin(0, rem) fullBleedsMargin(0, rem) 0;
  } @else if $side == "left" {
    padding: fullBleedsPadding(0, rem) 0 fullBleedsPadding(0, rem) fullBleedsPadding(0, rem);
    margin: fullBleedsMargin(0, rem) 0 fullBleedsMargin(0, rem) fullBleedsMargin(0, rem);
  }
}

@mixin setPageBorder($page-type, $type, $side) {
  @page #{$page-type}:#{$type} {
    @if $side == "left" {
      @left-middle {
        @content;
      }
      @top-left-corner {
        @content;
      }
      @bottom-left-corner {
        @content;
      }
      @left-bottom {
        @content;
      }
      @left-top {
        @content;
      }
    } @else if $side == "right" {
      @right-middle {
        @content;
      }
      @top-right-corner {
        @content;
      }
      @bottom-right-corner {
        @content;
      }
      @right-bottom {
        @content;
      }
      @right-top {
        @content;
      }
    }
  }
}

@include setPageBorder("eoc", "left", "left") {
  @include band("left");
}

@include setPageBorder("eoc", "right", "right") {
  @include band("right");
}

@include setPageBorder("eoc", "blank", "left") {
  content: none;
  border: none;
}
@include setPageBorder("eoc", "blank", "right") {
  content: none;
  border: none;
}
@include setPageBorder("appendix", "left", "left") {
  @include band("left");
}

@include setPageBorder("appendix", "right", "right") {
  @include band("right");
}

@include setPageBorder("appendix", "blank", "left") {
  content: none;
  border: none;
}
@include setPageBorder("appendix", "blank", "right") {
  content: none;
  border: none;
}
@include setPageBorder("eob", "left", "left") {
  @include band("left");
}

@include setPageBorder("eob", "right", "right") {
  @include band("right");
}

@include setPageBorder("eob", "blank", "left") {
  content: none;
  border: none;
}
@include setPageBorder("eob", "blank", "right") {
  content: none;
  border: none;
}

@page {
  margin-left: 1in;
  margin-right: 1in;
  margin-bottom: 0.8in;
  margin-top: 0.8in;
}
