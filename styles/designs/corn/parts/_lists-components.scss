// Containers
$ListContainer: empty_wrapper(Container, '');

$SectionWrapper--FirstLevel: empty_wrapper(FirstLevel, ' > section');
$SectionWrapper--SecondLevel: empty_wrapper(SecondLevel, ' > section > section');
$SectionWrapper--ThirdLevel: empty_wrapper(ThirdLevel, ' > section > section > section');

$DivWrapper--FirstLevel: empty_wrapper(FirstLevel, ' > div');
$DivWrapper--SecondLevel: empty_wrapper(SecondLevel, ' > div > div');
$DivWrapper--ThirdLevel: empty_wrapper(ThirdLevel, ' > div > div > div');

$ParaWrapper--FirstLevel: empty_wrapper(FirstLevel, ' > p');

// Basic Lists
$UnorderedList--FirstLevel: (
    _name: "FirstLevelUnorderedList",
    _subselector: ' > ul:not(.circled):not(.os-stepwise):not([data-labeled-item="true"])',
    _properties:(
        margin-left: h-spacing(3),
    )
);

$OrderedList--FirstLevel: (
    _name: "FirstLevelOrderedList",
    _subselector: " > ol:not(.circled):not(.os-stepwise)",
    _properties:(
        margin-left: h-spacing(3),
    )
);

$UnorderedList--SecondLevel: (
    _name: "SecondLevelUnorderedList",
    _subselector: " > li > ul:not(.circled):not(.os-stepwise)",
    _properties:(
        margin-left: h-spacing(2),
    )
);

$OrderedList--SecondLevel: (
    _name: "SecondLevelOrderedList",
    _subselector: " > li  > ol:not(.circled):not(.os-stepwise)",
    _properties:(
        margin-left: h-spacing(2),
    )
);

$UnorderedList--LearningObjectives: (
    _name: "LearningObjectivesList",
    _subselector: " > ul",
    _properties:(
        margin-left: h-spacing(1),
        list-style-type: none,
    )
);

// Circled Lists
$CircledList__Token: (
    _name: "CircledListToken",
    _subselector: " > .token",
    _properties:(
        color: enum('ValueSet:::REQUIRED'),
        font-size: font-scale(3),
        margin-right: h-spacing(1),
        line-height: line-height(3),
        vertical-align: middle,
    )
);

$CircledList: (
    _name: "OrderedCircledList",
    _subselector: " > .circled",
    _properties:(
        display: inline,
        list-style-type: none,
        padding-right: .5rem,
    )
);

$CircledList__Item: (
    _name: "CircledListItem",
    _subselector: " > li",
    _properties:(
       padding-right: column-v-spacing(1),
       display: inline-block,
    )
);

// Unstyled lists
$UnorderedList--Unstyled: ( //used in Media Note
    _name: "UnstyledUnorderedList",
    _subselector: " > ul:not(.circled):not(.os-stepwise)",
    _properties:(
        list-style-type: none,
    )
);

//Styled list item elements of EOS instructions
$ListItem--EOSIntructions: (
    _name: "InstructionsListItem",
    _subselector: " > li",
    _properties:(
        color: enum('ValueSet:::REQUIRED'),
        font-family: enum('ValueSet:::REQUIRED'),
        font-size: font-scale(0),
        line-height: line-height(0),
        font-style: italic,
        margin-top: v-spacing(1),
        width: 100%,
        break-after: avoid, //To Do: move to page-breaks.scss file
        break-inside: avoid,
    )
);

// Stepwise lists
$OrderedList--Stepwise: empty_wrapper(StepwiseList, ' ol.os-stepwise');

$OrderedList--Stepwise__Item: (
    _name: "StepwiseListItem",
    _subselector: " > li",
    _properties:(
        display: flex,
        flex-direction: row,
    )
);

$OrderedList--Stepwise__Token: (
    _name: "StepwiseListToken",
    _subselector: " > .os-stepwise-token",
    _properties:(
        flex-shrink: 0,
        margin-right: h-spacing(1),
    )
);

$OrderedList--Stepwise__Content: empty_wrapper(StepwiseContent, ' > .os-stepwise-content');
