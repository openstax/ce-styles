$ChapterIntroBody: (
    _name: "IntroBody",
    _subselector: ' > .intro-body',
    _properties: (
        display: flex, 
        flex-direction: row-reverse,
        justify-content: space-between,
        position: relative,
        right: -2in,
        margin-left: -2in,
    )
);

$ChapterIntroBodyWithoutProperties: empty_wrapper(IntroBody, ' > .intro-body');

$ChapterOutline: (
    _name: "Outline",
    _subselector: ' > .os-chapter-outline',
    _properties: (
        position: enum('ValueSet:::OPTIONAL'),
        width: enum('ValueSet:::REQUIRED'),
        right: enum('ValueSet:::OPTIONAL'),
        background-color: enum('ValueSet:::OPTIONAL'),
        color: enum('ValueSet:::OPTIONAL'),
        min-width: enum('ValueSet:::OPTIONAL'),
        margin: enum('ValueSet:::OPTIONAL'),
        padding: enum('ValueSet:::OPTIONAL'),
        font-family: enum('ValueSet:::REQUIRED'),
        font-size: enum('ValueSet:::REQUIRED'),
        line-height: enum('ValueSet:::REQUIRED'),
        font-weight: enum('ValueSet:::REQUIRED'),
        border-bottom-color: enum('ValueSet:::OPTIONAL'),
        border-bottom-width: enum('ValueSet:::OPTIONAL'),
        border-bottom-style: enum('ValueSet:::OPTIONAL'),
        box-decoration-break: enum('ValueSet:::OPTIONAL'),
    )
);

$ChapterOutlineTitle: (
    _name: "OutlineTitle",
    _subselector: ' > .os-title',
    _properties: (
        overflow: enum('ValueSet:::OPTIONAL'),
        border-bottom: enum('ValueSet:::OPTIONAL'),
        padding: enum('ValueSet:::OPTIONAL'),
        margin: enum('ValueSet:::REQUIRED'),
        font-size: enum('ValueSet:::REQUIRED'),
        line-height: enum('ValueSet:::REQUIRED'),
        font-weight: enum('ValueSet:::REQUIRED'),
        font-family: enum('ValueSet:::REQUIRED'),
        color: enum('ValueSet:::OPTIONAL'),
        position: enum('ValueSet:::OPTIONAL'),
        display: enum('ValueSet:::OPTIONAL'),
        flex-direction: enum('ValueSet:::OPTIONAL'),
    )
);

$ChapterOutlineObjective: (
    _name: "ChapterOutlineObjective", 
    _subselector: ' > div.os-chapter-objective', 
    _properties: (
        margin-bottom: .5rem,
        padding-right: enum('ValueSet:::OPTIONAL'),
    )
);

$ChapterOutlineObjectiveLink: (
    _name: "OutlineObjectiveLink",
    _subselector: ' > a.os-chapter-objective',
    _properties: (
        display: enum('ValueSet:::REQUIRED'),
        text-decoration: enum('ValueSet:::OPTIONAL'),
        color: enum('ValueSet:::REQUIRED'),
        font-family: enum('ValueSet:::OPTIONAL'),
        font-weight: enum('ValueSet:::OPTIONAL'),
        font-size: enum('ValueSet:::OPTIONAL'),
        margin-bottom: enum('ValueSet:::OPTIONAL'),
    )
);

$ChapterOutlineObjectiveText: (
    _name: "ChapterOutlineObjectiveText",
    _subselector: ' > .os-text', 
    _properties: (
        display: enum('ValueSet:::OPTIONAL'),
        margin-left: enum('ValueSet:::OPTIONAL'),
    )
);

$ChapterOutlineObjectiveLearning: (
    _name: "OutlineObjectiveLearning",
    _subselector: ' > .learning-objective',
    _properties: (
        margin-left: enum('ValueSet:::OPTIONAL'),
    )
);
$ChapterOutlineAbstract: (
    _name: "OutlineAbstract",
    _subselector: ' > [data-type="abstract"]',
    _properties: (
        margin-left: 1.5rem,
        font-family: enum('ValueSet:::OPTIONAL'),
    )
);

$ChapterOutlineList: (
    _name: "OutlineList",
    _subselector: ' > ul',
    _properties: (
        margin-bottom: v-spacing(1),
    )
);

$ChapterObjectives: empty_wrapper(Objectives, ' > .chapter-objectives');

$ChapterObjectivesTitle: (
    _name: "ObjectivesTitle",
    _subselector: ' > [data-type="title"]',
    _properties: (
        font-family: enum('ValueSet:::REQUIRED'),
        font-weight: bold,
        text-transform: uppercase,
        font-size: font-scale(2),
        line-height: line-height(2),
        color: enum('ValueSet:::REQUIRED'),
    )
);

$ChapterObjectivesPara: (
    _name: "ObjectivesPara",
    _subselector: ' > p',
    _properties: (
        color: enum('ValueSet:::REQUIRED'),
        font-family: enum('ValueSet:::REQUIRED'),
        font-size: font-scale(1),
        line-height: line-height(1),
        font-style: italic,
    )
);

$ChapterObjectivesList: (
    _name: "ObjectivesList",
    _subselector: ' > ul',
    _properties: (
        margin-bottom:v-spacing(2),
        margin-left: h-spacing(2),
        padding-left: 0,
        font-size: font-scale(0),
        line-height: line-height(0),
    )
);

$ChapterObjectivesListItem: (
    _name: "ObjectivesListItem",
    _subselector: ' > li',
    _properties: (
        color: enum('ValueSet:::REQUIRED'),
        font-family: enum('ValueSet:::REQUIRED'),
        padding: 0,
    )
);

$ChapterObjectivesListDot: (
    _name: "ObjectivesListDot",
    _subselector: '::marker',
    _properties: (
        color: enum('ValueSet:::REQUIRED'),
    )
);

$ChapterIntroContent: empty_wrapper(IntroContent, ' > .intro-text');

$ChapterIntroContentHeader: (
    _name: "IntroContentHeader",
    _subselector: ' > h2[data-type="document-title"]:first-of-type', 
    _properties: (
        float: left,
        font-size: enum('ValueSet:::OPTIONAL'), 
        text-transform: enum('ValueSet:::OPTIONAL'), 
        margin: enum('ValueSet:::OPTIONAL'),
        font-weight: enum('ValueSet:::OPTIONAL'),
    )
);

$ChapterSplashImg: (
    _name: "SplashImg",
    _subselector: '> img',
    _properties: (
        width: half-fullBleedsSize(8, in),
    )
);

$ChapterSplashMedia: (
    _name: "SplashImgMedia",
    _subselector: ' > span[data-type="media"]',
    _properties: (
        line-height: 0,
        height: 100%,
        display: flex,
        width: half-fullBleedsSize(7.5, in),
        justify-content: flex-end
    ),
    _components: (
        $ChapterSplashImg,
    )
);

@function fullWidthBg($kind, $color) {
    @return (
        _name: "#{$kind}Bg",
        _subselector: '::before',
        _properties: (
            content: "''",
            background-color: $color,
            position: absolute,
            height: 100%,
            width: enum('ValueSet:::REQUIRED'),
            margin-left: enum('ValueSet:::REQUIRED'),
            z-index: -1,
            box-sizing: border-box,
            padding: inherit,
            top: 0,
        ),
    );
}

$ChapterSplashFigure: (
    _name: "SplashFigure",
    _subselector: ' > figure.splash',
    _properties: (
        position: relative,
        margin: 0,
    ),
    _components: (
        fullWidthBg("SplashFigure", enum('ValueSet:::REQUIRED')),
        $ChapterSplashMedia,
    )
);

$SplashCaption: (
    _name: "SplashCaption",
    _subselector: ' > .os-caption-container',
    _properties: (
        position: relative,
        padding-top: 1rem,
        padding-bottom: 2rem,
    ),
    _components: (
        fullWidthBg("SplashCaption", enum('ValueSet:::REQUIRED')),
        $FigureNum,
        $FigureLabel,
        $FigureTitle,
        $Caption
    )
);

$ChapterSplashFigureWrapper: (
    _name: "SplashFigureWrapper",
    _subselector: ' > .os-figure.has-splash',
    _properties: (
        margin-bottom: 2rem,
    ),
    _components: (
        $ChapterSplashFigure,
        $SplashCaption,
    )
);

// This function counts width and margins for bottom border of the title
// depends on width of the title in px rounded to one decimal place
@function titleBottomBorder($name, $titleWidth) {
    $fullTitleWidth: $titleWidth + 8 ; // Width of title with 8px white space
    $borderMargin: ($fullTitleWidth / 12) * 1rem; // 12 - default px size
    $borderWidth: (6.5 - $fullTitleWidth / 96) * 1in; // 1in = 96px

    @return (
      _name: "#{$name}TitleBottomBorder",
      _subselector: '::after',
      _properties: (
        content: "''",
        width: $borderWidth,
        border-bottom-width: 0.2rem,
        border-bottom-color: enum('ValueSet:::REQUIRED'),
        border-bottom-style: solid,
        margin-left: $borderMargin,
        position: absolute, 
        bottom: 0,
        display: inline-block,
      )
    );
}

$ChapterOutlineTitleBottomBorder: titleBottomBorder("Outline", 116.7);
