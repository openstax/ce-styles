$Table__Container: (
    _name: "TableContainer",
    _subselector: "",
    _properties: (
        margin-bottom: table-v-spacing(1),
        display: enum('ValueSet:::OPTIONAL'),
        margin-left: enum('ValueSet:::OPTIONAL'),
        margin-right: enum('ValueSet:::OPTIONAL'),
    )
);

// Used in exercises
$Exercises__Container: empty_wrapper(ExercisesContainer, '');
$Table__Container__Wrapper: empty_wrapper(TableContainer, ' .os-table');

$Table: (
    _name: "Table",
    _subselector: " > table",
    _properties: (
        border-collapse: enum('ValueSet:::OPTIONAL'),
        width: enum('ValueSet:::OPTIONAL'),
        max-width: enum('ValueSet:::OPTIONAL'), //used in exercises
        table-layout: enum('ValueSet:::OPTIONAL'), //used in exercises
        margin-bottom: enum('ValueSet:::OPTIONAL'), // used in BasicTable
    )
);

$Table__Container--ModuleWithUnstyledTable: (
    _name: "TableContainerModuleWithUnstyledTable",
    _subselector: " > .os-table.os-unstyled-container",
    _properties: (
        margin-bottom: 0,
    )
);

$Table--ModuleWithUnstyledTable: (
    _name: "TableModuleWithUnstyledTable",
    _subselector: " > table.unstyled",
    _properties: (
        margin-bottom: 0,
    )
);

$Table__Head: (
    _name: "TableHead",
    _subselector: " > thead",
    _properties: ()
);

$Table__Head: empty_wrapper(TableHead, ' > thead');

$Table__Head__Title: (
    _name: "TableHeadTitle",
    _subselector: " > tr:first-of-type",
    _properties: (
        color: enum('ValueSet:::OPTIONAL'),
    )
);

$Table__Head__Cell: (
    _name: "TableHeadCell",
    _subselector: " > th",
    _properties: (
        border-bottom: enum('ValueSet:::OPTIONAL'),
        border-top: enum('ValueSet:::OPTIONAL'),
        font-family: enum('ValueSet:::OPTIONAL'),
        font-weight: enum('ValueSet:::OPTIONAL'),
        padding: table-v-spacing(1) table-h-spacing(1), //left as a temporary solution (the values of these functions are the sema in this case), we need to investigate the second function value are not showing in the output file (it only happens when the functions are defined together for padding property value in compoents, when they are defined in settings file it works fine)
    )
);

$Table__Head__Cell--NoCellBorder: (
    _name: "NoBordersTableHeadCell",
    _subselector: " > th",
    _properties: (
        border-top-color: black,
        border-top-width: 0.1rem,
        border-top-style: solid,
        border-bottom-color: black,
        border-bottom-width: 0.1rem,
        border-bottom-style: solid,
        font-family: enum('ValueSet:::OPTIONAL'),
        font-weight: enum('ValueSet:::OPTIONAL'),
        padding-top: 0.16rem,
        padding-bottom: 0.16rem,
        padding-right: table-h-spacing(1),
        padding-left: table-h-spacing(1),

    )
);

$Table__HeadCell--TopAligned: (
    _name: "TopAlignedTableHeadCell",
    _subselector: "> th[data-valign="top"]",
    _properties: (
       vertical-align: top,
    )
);

$Table__HeadCell--LeftAligned: (
    _name: "LeftAlignedTableHeadCell",
    _subselector: "> th[data-align="left"]",
    _properties: (
        text-align: left,
    )
);

$Table__HeadCell--RightAligned: (
    _name: "RightAlignedTableHeadCell",
    _subselector: "> th[data-align="right"]",
    _properties: (
        text-align: right,
    )
);

$Table__HeadCell--Centered: (
    _name: "CenteredTableHeadCell",
    _subselector: "> th[data-align="center"]",
    _properties: (
        text-align: center,
    )
);

$Table__HeadCell--VerticallyTight: (
    _name: "VerticallyTightHeadCell",
    _subselector: "> th",
    _properties: (
        padding-top: 0.16rem,
        padding-bottom: 0.16rem
    )
);

$Table__Body: empty_wrapper(TableBody, ' > tbody');

$Table__Row: empty_wrapper(TableRow, ' > tr');

$Table__Data: (
    _name: "TableData",
    _subselector: " > td:not(:only-of-type)",
    _properties: (
        font-family: enum('ValueSet:::OPTIONAL'),
        border-left: enum('ValueSet:::OPTIONAL'),
        border-bottom: enum('ValueSet:::OPTIONAL'),
        text-align: enum('ValueSet:::OPTIONAL'), //used in exercises
        padding-top: enum('ValueSet:::REQUIRED'), //different value in vertically-tight tables
        padding-bottom: enum('ValueSet:::REQUIRED'), //different value in vertically-tight tables
        padding-right: enum('ValueSet:::REQUIRED'), //different value in exercises
        padding-left: enum('ValueSet:::REQUIRED'), //different value in exercises
    )
);

$Table__Data--Unstyled: (
    _name: "TableUnstyledData",
    _subselector: " > td",
    _properties: (
        padding-top: table-v-spacing(1),
        padding-bottom: table-v-spacing(1),
        padding-right: table-h-spacing(1),
        padding-left: table-h-spacing(1),
    )
);

// Content driven alignment
$Table__Data--TopAligned: (
    _name: "TopAlignedTableData",
    _subselector: "> td[data-valign="top"]",
    _properties: (
       vertical-align: top,
    )
);

$Table__Data--LeftAligned: (
    _name: "LeftAlignedTableData",
    _subselector: "> td[data-align="left"]",
    _properties: (
        text-align: left,
    )
);

$Table__Data--RightAligned: (
    _name: "RightAlignedTableData",
    _subselector: "> td[data-align="right"]",
    _properties: (
        text-align: right,
    )
);

$Table__Data--Centered: (
    _name: "CenteredTableData",
    _subselector: "> td[data-align="center"]",
    _properties: (
        text-align: center,
    )
);

$Table__Data--VerticallyTight: (
    _name: "VerticallyTightTableData",
    _subselector: "> td:not(.regular-spacing):not(.pseudo-class-for-precedence)",     // not classes for css precedence
    _properties: (
        padding-top: 0.16rem,
        padding-bottom: 0.16rem
    )
);

// Added as part of the fix for cnx-recipes#1827.
$Table__Data--BottomBorder: (
    _name: "TableBottomBorderData",
    _subselector: " > td",
    _properties: (
        border-bottom: enum('ValueSet:::OPTIONAL'),
        padding: table-v-spacing(1),
    )
);

// Altered as part of the fix for cnx-recipes#1827.
$Table__Data--First: (
    _name: "FirstTableData",
    _subselector: " > td:first-of-type:not(:only-of-type)",
    _properties: (
        border-left: none,
        border-right: enum('ValueSet:::REQUIRED'),
        font-family: enum('ValueSet:::OPTIONAL'),
        font-weight: enum('ValueSet:::OPTIONAL'),
    )
);

$Table__Row--First: (
    _name: "FirstTableRow",
    _subselector: " > tr:first-of-type",
    _properties: (
        border-top-color: enum('ValueSet:::OPTIONAL'),
        border-top-width: enum('ValueSet:::OPTIONAL'),
        border-top-style: enum('ValueSet:::OPTIONAL'),
    )
);

$Table__Row--Last__Data: (      // deprecated
    _name: "LastTableRowData",
    _subselector: " > tr:last-of-type > td",
    _properties: (
        border-bottom-color: enum('ValueSet:::REQUIRED'),
        border-bottom-width: 0.1rem,
        border-bottom-style: solid,
    )
);

$Table__Row--Last: (
    _name: "LastTableRow",
    _subselector: " > tr:last-of-type",
    _properties: (
        border-bottom: enum('ValueSet:::REQUIRED'),
    )
);

$Table__Row--Last--MergedCells__Data: (
    _name: "LastTableMergedCellsRowData",
    _subselector: " > tr:last-of-type > td:only-of-type",
    _properties: (
        border-right: none,
    )
);

$Table__Row--HeaderRowClass: (
    _name: "HeaderRow",
    _subselector: " > tr.header-row > td",
    _properties: (
        border-top-color: black,
        border-top-width: 0.1rem,
        border-top-style: solid,
        border-bottom-color: black,
        border-bottom-width: 0.1rem,
        border-bottom-style: solid,
        padding-top: 0.16rem,
        padding-bottom: 0.16rem,
        font-weight: 700,
        padding-left: table-h-spacing(1),
        padding-right: table-h-spacing(1),
    )
);

// Better way to do a bottom border on a table: make it part of the caption
$Table__BottomBorder: (
    _name: "TableBottomBorder",
    _subselector: ":before",
    _properties: (
        content: "''",
        width: 100%,
        border-bottom-color: enum('ValueSet:::REQUIRED'),
        border-bottom-width: .12rem,
        border-bottom-style: solid,
        display: block,
        position: relative,
        top: -0.1rem,
    )
);

$Table__BottomBorder--AfterTable: (
    _name: "TableBottomBorderAfterTable",
    _subselector: ":after",
    _properties: (
        content: "''",
        width: 100%,
        border-top-color: enum('ValueSet:::REQUIRED'),
        border-top-width: .12rem,
        border-top-style: solid,
        display: block,
        position: relative,
        top: -0.1rem,
    )
);

$Table__Row--AlternateShading: ( //nursing external (even rows)
    _name: "AlternateShadingTableRow",
    _subselector: "> tr:nth-child(even)",
    _properties: (
        background-color: enum('ValueSet:::REQUIRED'),
    )
);

// Table data container used in table list shape
$Table__Data--Wrapper: empty_wrapper(TableData, ' > td');
$Table--Wrapper: empty_wrapper(Table, ' > table');

$Table--TopSpacing:(
    _name: "TableTopSpacing",
    _subselector: " + .os-table",
    _properties: (
        margin-top: 1rem,
    )
);
